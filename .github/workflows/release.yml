name: Release

on:
  pull_request:
  push:
    branches:
      - develop
    tags:
      - "*"

env:
  DOCKER_SECRETS_AVAILABLE: ${{ secrets.DOCKER_USERNAME }}

jobs:
  # taken from https://github.com/docker/build-push-action/blob/master/UPGRADE.md#tags-with-ref-and-git-labels
  docker:
    name: Publish Docker image
    runs-on: ubuntu-latest
    if: ${{ env.DOCKER_SECRETS_AVAILABLE }}
    steps:
      - uses: actions/checkout@v2
      - id: prep
        name: Prepare image metadata
        run: |
          LEGACY_DOCKER_IMAGE=returntocorp/semgrep-action
          DOCKER_IMAGE=returntocorp/semgrep-agent
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${LEGACY_DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${VERSION}"
          if [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${LEGACY_DOCKER_IMAGE}:sha-${GITHUB_SHA::8},${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
